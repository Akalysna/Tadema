name: Build And Deploy
on : 
  pull_request:
    branches: main
  workflow_dispatch: 
    inputs:
      type:
        description: 'NPM Version type'
        type: string

jobs:
  ci: 
    #if: ${{ github.event.label.name != 'release' }}
    if: false
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout main branch
      uses: actions/checkout@v4
      
    - name: Install NodeJs
      uses: actions/setup-node@v4
      with: 
        node-version: 16.x

    - name: Install
      run: npm i

    - name: Test
      run: npm run test

    - name: ES Lint
      run: npm run lint

    - name: Build
      run: npm run build

  cd: 
    #needs: ci
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main branch
      uses: actions/checkout@v4
      
    - name: Install NodeJs
      uses: actions/setup-node@v4
      with: 
        node-version: 16.x
        
    - name: Login to ghcr.io
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: downcase REPO
      run: |
        echo "REPOSITORY=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
        echo "REPOSITORY_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >> ${GITHUB_ENV}
        
    #Récupération du SHA du commit pour nommer la version de l'image
    - name: Build and tag image
      run: |
        COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7) 
        docker build -t ${{env.REPOSITORY}}:$COMMIT_SHA .

    - name: Push image to GHCR
      run: docker push ghcr.io/${{env.REPOSITORY}}:$COMMIT_SHA
  
  release:
    needs: ci 
    if: github.event.inputs.type != ''
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout main branch
      uses: actions/checkout@v4
      
    - name: Install NodeJs
      uses: actions/setup-node@v4
      with: 
        node-version: 16.x
        
    - name: NPM version
      id: version
      run: | 
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        VERSION=`npm version ${{ inputs.type }}`
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with: 
        token: ${{ secrets.GITHUB_TOKEN }}
        delete-branch: true
        title: Release ${{ steps.version.outputs.VERSION }}
        branch: release/${{ steps.version.outputs.VERSION }}
        labels: release

    - name: Merge
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh pr merge --auto --delete-branch --squash "release/${{ steps.version.outputs.VERSION }}"
 
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version.outputs.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
